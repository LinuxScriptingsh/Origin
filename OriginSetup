#!/bin/bash

# OriginSetup; This script installs the Origin Software of the EA network on almost any Linux distribution using the WINE compatibilitylayer.
# Copyright (C) 2019 LinuxSquare

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version

# This program is distributed in the hope it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTYBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Generel Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program, If not, see <https://www.gnu.org/licenses/>.


export WINEPREFIX=~/SquareGames/EA32
export WINEARCH=win64
. /etc/os-release
OS=$ID
pkgname=OriginSetup
pkgver='Beta 4.13'
pkgdesc='Installs EA`s Origin on GNU/Linux'
license='GPLv3'
url="https://github.com/LinuxSquare/Origin"
LOCATION=$HOME/SquareGames
prefixname=EA32
archdepends="lib32-libldap lib32-gnutls lib32-vulkan-icd-loader wget git cabextract archlinux-keyring"
fedoradepends="openldap gnutls vulkan-loader cabextract"
susedepends="gnutls openldap2 vulkan-loader cabextract"
debdepends="libldap-2.4-2 gnutls-bin apt-transport-https cabextract" #Vulkan ICD Loader missing

WHITE='\033[0m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\e[38;5;202m'

function redecho() {
  echo -e "${RED}${*}${WHITE}"
}

function errorQuit() {
  redecho "$1"
  exit 1
}

function greenecho() {
  echo -e "${GREEN}${*}${WHITE}"
}

function orangeecho() {
  echo -e "${ORANGE}${*}${WHITE}"
}

function help() {
  echo -e "OriginSetup: $1: invalid option"
  echo -e "  -i, --install\t\t\t Installs the software"
  echo -e "  -u, --update\t\t\t Updates the software"
  echo -e "  -v, --version\t\t\t Shows the current version and the license of the software."
  echo -e "      --uninstall\t\t\t Uninstalls the software"
}

function version() {
    echo -e "    ${pkgname}, $pkgver
    Copyright (C) 2019 LinuxSquare
    License ${license}: GNU GPL version 3 or later <https://www.gnu.org/licenses/gpl.html>
    This program comes with ABSOLUTELY NO WARRANTY.
    This is free software, and you are welcome to redistribute it."
}

function uninstall() {
  pushd "${WINEPREFIX}/drive_c/Program Files (x86)/Origin"
  wineserver -f &
  wineserver_pid=$!
  orangeecho "Starting Origin Uninstaller"
  wine start 'OriginUninstall.exe'
  while kill -0 ${wineserver_pid} 2>/dev/null; do
      sleep 1
  done
  popd
  rm -rf ~/SquareGames/EA32/
}

function checkConnection() {
  orangeecho "Checking your internet-connection"
  wget --spider --quiet http://example.com
  if [[ $? != 0 ]]; then
    REASON="Either no internet-connection or wget not installed"
    errorQuit "Uh oh, and error occured during installation, please fix the problem first, before you retry.
    \nErrorCode: $REASON"
  else
    greenecho "Connection OK"
  fi
}

function dependencies() {
  if [[ -d $LOCATION/$prefixname ]]; then
    errorQuit "It seems that you have already used this script.
    \nPlease uninstall the software first before you try again."
  fi
  greenecho "Installing missing dependencies. This may take a while, depending on your internet-connection..."
  if [[ $OS = "arch" ]]; then
    for dependency in $archdepends
    do
      sudo pacman -S $dependency --quiet --noconfirm --noprogressbar
    done
  elif [[ $OS = "debian" || $OS = "ubuntu" || $OS = "linuxmint" ]]; then
  for dependency in $debdepends
  do
    sudo apt-get -qq install $dependency -y
  done
  elif [[ $OS = "fedora" ]]; then
  for dependency in $fedoradepends
  do
    sudo dnf -q install $dependency -y
  done
  elif [[ $OS = "opensuse-tumbleweed" || $OS = "opensuse-leap" ]]; then
  for dependency in $susedepends
  do
    sudo zypper in --no-confirm $dependency
  done
  fi

}

function buildwine() {
  greenecho "Installing Wine from the repository"
  if [[ $OS = "arch" ]]; then
    sudo pacman -Syu --quiet --noconfirm --noprogressbar
    sudo pacman -S wine-staging --quiet --noconfirm --noprogressbar
  elif [[ $OS = "debian" || $OS = "ubuntu" || $OS = "linuxmint" ]]; then
    DEBVER=$VERSION_ID
    sudo dpkg --add-architecture i386
    wget -nc --quiet https://dl.winehq.org/wine-builds/Release.key
    sudo apt-key add Release.key
    rm -f Release.key
    if [[ $DEBVER = "9" ]]; then
      echo "deb https://dl.winehq.org/wine-builds/debian/ stretch main" | sudo tee /etc/apt/sources.list.d/wine.list
    elif [[ $DEBVER = "8" ]]; then
      echo "deb https://dl.winehq.org/wine-builds/debian/ jessie main" | sudo tee /etc/apt/sources.list.d/wine.list
    elif [[ $OS = "ubuntu" ]]; then
      sudo apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/
    elif [[ $DEBVER = "19" ]]; then
      sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main"
    elif [[ $DEBVER = "18.3" || $DEBVER = "18.2" || $DEBVER = "18.1" || $DEBVER = "18" ]]; then
      sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu/ xenial main"
    else
      errorQuit "Unsupported distro version. This script currently supports only:
      \nDebian 9 and 8
      \nAny kind of Ubuntu version
      \nLinux Mint 18.x and 19.0"
    fi
    sudo apt-get -qq update
    sudo apt-get -qq upgrade -y
    sudo apt-get -qq install --install-recommends winehq-staging -y
  elif [[ $OS = "fedora" ]]; then
    FEDORAVER=$VERSION_ID
    if [[ $FEDORAVER = "29" ]]; then
      sudo dnf -q config-manager --add-repo https://download.opensuse.org/repositories/Emulators:/Wine:/Fedora/Fedora_29_standard/Emulators:Wine:Fedora.repo
    elif [[ $FEDORAVER = "28" ]]; then
      sudo dnf -q config-manager --add-repo https://dl.winehq.org/wine-builds/fedora/28/winehq.repo
    else
      errorQuit "Unsupported Fedora version. Please make sure you're using either version 28 or 29"
    fi
    sudo dnf -q install winehq-staging -y
  elif [[ $OS = "opensuse-tumbleweed" ]]; then
    sudo zypper dup -y
    sudo zypper ar -f http://download.opensuse.org/repositories/Emulators:/Wine/openSUSE_Tumbleweed/Emulators:Wine.repo | echo 'a'
    sudo zypper in -y wine-staging
  elif [[ $OS = "opensuse-leap" ]]; then
    SUSEVER=$VERSION
    if [[ $SUSEVER = "15.0" ]]; then
      sudo zypper ar -f http://download.opensuse.org/repositories/Emulators:/Wine/openSUSE_Leap_15.0/Emulators:Wine.repo | echo 'a'
    elif [[ $SUSEVER = "42.3" ]]; then
      sudo zypper ar -f http://download.opensuse.org/repositories/Emulators:/Wine/openSUSE_Leap_42.3/Emulators:Wine.repo | echo 'a'
    else
      errorQuit "Unsupported openSUSE version. Please make sure you're using either version 42.3, 15.0 or Tumbleweed"
    fi
    sudo zypper in -y wine-staging
  fi
}

function preparePrefix() {
  # VulkanSDK
  greenecho "Cloning VulkanSDK from LunarG"
  wget https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe?Human=true
  mv vulkan-sdk.exe?Human=true vulkan-sdk.exe
  mkdir -p ~/SquareGames
  WINEPREFIX=~/SquareGames/EA32 wine vulkan-sdk.exe
  WINEARCH=win64 wineboot -u
  export WINEDEBUG=-all
  pushd "${WINEPREFIX}"
  mkdir -p 32
  mkdir -p 64
  cd 32
  wget https://haagch.frickel.club/files/dxvk/latest/32/bin/d3d11.dll https://haagch.frickel.club/files/dxvk/latest/32/bin/dxgi.dll https://haagch.frickel.club/files/dxvk/latest/32/bin/setup_dxvk.sh
  WINEPREFIX=~/SquareGames/EA32 bash setup_dxvk.sh install -y

  cd ../64
  wget https://haagch.frickel.club/files/dxvk/latest/64/bin/d3d11.dll https://haagch.frickel.club/files/dxvk/latest/64/bin/dxgi.dll https://haagch.frickel.club/files/dxvk/latest/64/bin/setup_dxvk.sh
  WINEPREFIX=~/SquareGames/EA32 bash setup_dxvk.sh install -y
  popd
  rm -f vulkan-sdk.exe
  # winetricks
  greenecho "Cloning winetricks from githubusercontent"
  wget --quiet --no-check-certificate https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
  chmod +x winetricks
  orangeecho "Downloading dlls to generate Wineprefix. Please select Windows 7 as your operating system inside winecfg.
  \nBe sure you have removed the ticks for sending data and crash reports to Microsoft, while installing the DLL files.
  \nPress [RETURN] when you've finished reading."
  read
  WINEPREFIX=~/SquareGames/EA32 ./winetricks vcrun2010
  WINEPREFIX=~/SquareGames/EA32 ./winetricks vcrun2013
  WINEPREFIX=~/SquareGames/EA32 ./winetricks vcrun2017
  WINEPREFIX=~/SquareGames/EA32 ./winetricks d3dx9
  WINEPREFIX=~/SquareGames/EA32 wine winecfg
  rm -f winetricks
}

function install() {
  pushd "${WINEPREFIX}/drive_c"
  greenecho "Getting Origin installation-file"
  wget --quiet https://origin-a.akamaihd.net/Origin-Client-Download/origin/live/OriginThinSetup.exe
  sleep 2
  wineserver -f &
  wineserver_pid=$!
  greenecho "Starting Origin Installer"
  sleep 3
  WINEPREFIX=~/SquareGames/EA32 wine OriginThinSetup.exe
  while kill -0 ${wineserver_pid} 2> /dev/null; do
      sleep 1
  done
  rm -f OriginThinSetup.exe
  popd
}

function update() {
  pushd "${WINEPREFIX}/drive_c/Program Files/Origin"
  wget --quiet https://download.dm.origin.com/origin/live/OriginSetup.exe
  unzip OriginSetup.exe | echo 'A'
  popd
}


case $1 in
-i|--install)
  checkConnection
  dependencies
  buildwine
  preparePrefix
  install
  ;;
-u|--update)
  update
  ;;
--uninstall)
  uninstall
  ;;
-h|--help)
  help
  ;;
-v|--version)
  version
  ;;
*)
  orangeecho "Type $0 --help for more information"
  ;;
esac
